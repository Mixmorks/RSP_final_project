<launch>
  <set_env name="TURTLEBOT3_MODEL" value="waffle"/>
  <arg name="entity_name" default="waffle"/>
  <!-- <executable cmd="export TURTLEBOT3_MODEL=waffle" output="screen"/> -->

  <node
    pkg="robot_state_publisher"
    exec="robot_state_publisher"
    output="screen">
    <param name='robot_description' value="$(command 'xacro $(find-pkg-share final_project)/urdf/waffle.urdf.xacro')"/>
    <remap from="joint_states" to="/world/empty/model/$(var entity_name)/joint_state"/>
  </node>

  <include file="$(find-pkg-share ros_ign_gazebo)/launch/ign_gazebo.launch.py">
    <!-- <arg name="ign_args" value="$(find-pkg-share edumip_gazebo)/worlds/tot.sdf"/> -->
    <arg name="ign_args" value="empty.sdf -v 4"/>
  </include>

  <node
    pkg="ros_ign_gazebo"
    exec="create"
    args="-topic robot_description -name $(var entity_name)"
    output="screen"/>

  <node
    pkg="turtlebot3_teleop"
    exec="teleop_keyboard"
    output="screen"
    launch-prefix="xterm -e"
  />

  <node
    pkg="ros_ign_bridge"
    exec="parameter_bridge"
        args="/world/empty/model/$(var entity_name)/joint_state@sensor_msgs/msg/JointState@ignition.msgs.Model"
    output="screen"/>

  <node
    pkg="ros_ign_bridge"
    exec="parameter_bridge"
    args="/cmd_vel@geometry_msgs/msg/Twist@ignition.msgs.Twist"
    output="screen"/>

</launch>
