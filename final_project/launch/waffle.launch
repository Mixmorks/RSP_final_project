<launch>
  <arg name="entity_name" default="waffle"/>
  <arg name="entity2_name" default="burger"/>
  <arg name="ns1_name" default="waffle"/>
  <arg name="ns2_name" default="burger"/>

  <!-- TURTLEBOT3_MODEL variable mush be set. Otherwise, teleop would crash! -->
  <set_env name="TURTLEBOT3_MODEL" value="waffle"/>
  <!-- <set_env name="IGN_GUI_PLUGIN_PATH" value="/usr/lib/x86_64-linux-gnu/ign-gazebo-6/plugins/gui"/> -->
  <!-- <executable cmd="export TURTLEBOT3_MODEL=waffle" output="screen"/> -->


 <executable cmd="ign gazebo $(find-pkg-share final_project)/world/test-nav2_map.sdf -r -v 4" output="screen"/>

  <group>
    <push-ros-namespace namespace="$(var ns1_name)"/>
  <node
    pkg="robot_state_publisher"
    exec="robot_state_publisher"
    output="screen">
    <param name='robot_description' value="$(command 'xacro $(find-pkg-share final_project)/urdf/waffle.urdf.xacro entity_name:=$(var entity_name)')"/>
    <remap from="joint_states" to="/world/empty/model/$(var entity_name)/joint_state"/>
    <remap from="robot_description" to="/$(var entity_name)/robot_description"/>
  </node>

  <node
    pkg="ros_ign_gazebo"
    exec="create"
    args="-topic robot_description -name $(var entity_name) -z -0.11"
    output="screen"/>


  <node
    pkg="ros_ign_bridge"
    exec="parameter_bridge"
        args="/world/empty/model/$(var entity_name)/joint_state@sensor_msgs/msg/JointState@ignition.msgs.Model"
    output="screen"/>

  <node
    pkg="ros_ign_bridge"
    exec="parameter_bridge"
    args="$(var entity_name)/cmd_vel@geometry_msgs/msg/Twist@ignition.msgs.Twist"
    output="screen"/>

  <node
    pkg="ros_ign_bridge"
    exec="parameter_bridge"
    args="$(var entity_name)_lidar@sensor_msgs/msg/LaserScan@ignition.msgs.LaserScan"
    output="screen"/>

  </group>

  <!-- <group> -->
  <!--   <push-ros-namespace namespace="$(var ns2_name)"/> -->
  <!-- <node -->
  <!--   pkg="robot_state_publisher" -->
  <!--   exec="robot_state_publisher" -->
  <!--   output="screen"> -->
  <!--   <param name='robot_description' value="$(command 'xacro $(find-pkg-share final_project)/urdf/burger.urdf.xacro entity_name:=$(var entity2_name)')"/> -->
  <!--   <remap from="joint_states" to="/world/empty/model/$(var entity2_name)/joint_state"/> -->
  <!-- </node> -->

  <!-- <node -->
  <!--   pkg="ros_ign_gazebo" -->
  <!--   exec="create" -->
  <!--   args="-topic robot_description -name $(var entity2_name)" -->
  <!--   output="screen"/> -->


  <!-- <node -->
  <!--   pkg="ros_ign_bridge" -->
  <!--   exec="parameter_bridge" -->
  <!--       args="/world/empty/model/$(var entity2_name)/joint_state@sensor_msgs/msg/JointState@ignition.msgs.Model" -->
  <!--   output="screen"/> -->

  <!-- <node -->
  <!--   pkg="ros_ign_bridge" -->
  <!--   exec="parameter_bridge" -->
  <!--   args="$(var entity2_name)/cmd_vel@geometry_msgs/msg/Twist@ignition.msgs.Twist" -->
  <!--   output="screen"/> -->

  <!-- </group> -->

  <node
    pkg="ros_ign_bridge"
    exec="parameter_bridge"
    args="odom@nav_msgs/msg/Odometry@ignition.msgs.Odometry"
    output="screen"/>

  <node
    pkg="ros_ign_bridge"
    exec="parameter_bridge"
    args="tf@tf2_msgs/msg/TFMessage@ignition.msgs.Pose_V"
    output="screen"/>

  <node
    pkg="turtlebot3_teleop"
    exec="teleop_keyboard"
    output="screen"
    launch-prefix="xterm -e">
    <remap from="cmd_vel" to="$(var ns1_name)/$(var entity_name)/cmd_vel"/>
  </node>

  <!-- <node -->
  <!--   pkg="turtlebot3_teleop" -->
  <!--   exec="teleop_keyboard" -->
  <!--   output="screen" -->
  <!--   launch-prefix="xterm -e"> -->
  <!--   <remap from="cmd_vel" to="$(var ns2_name)/$(var entity2_name)/cmd_vel"/> -->
  <!-- </node> -->

  <node
      pkg="rviz2"
      exec="rviz2"
      args = "-d $(find-pkg-share final_project)/rviz/simulation.rviz"
      output="screen"/>

</launch>
